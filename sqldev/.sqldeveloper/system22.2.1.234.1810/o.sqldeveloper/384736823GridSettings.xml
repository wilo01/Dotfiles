<?xml version = '1.0' encoding = 'UTF-8'?>
<TableSettings class="oracle.dbtools.raptor.controls.grid.RaptorGridPersistedSettings" xmlns="http://xmlns.oracle.com/jdeveloper/110000/Table-attributes">
   <columnPositions class="java.util.ArrayList">
      <Item class="java.lang.String">RNUM</Item>
      <Item class="java.lang.String">BEGIN</Item>
      <Item class="java.lang.String">END</Item>
      <Item class="java.lang.String">TOTAL</Item>
      <Item class="java.lang.String">ID</Item>
      <Item class="java.lang.String">PERSON_CODE</Item>
      <Item class="java.lang.String">PERSON_TYPE</Item>
      <Item class="java.lang.String">PERSON_TYPE_DESCRIPTION</Item>
      <Item class="java.lang.String">TITLE_CODE</Item>
      <Item class="java.lang.String">TITLE_DESCRIPTION</Item>
      <Item class="java.lang.String">FORENAME</Item>
      <Item class="java.lang.String">SURNAME</Item>
      <Item class="java.lang.String">MIDDLE_NAME</Item>
      <Item class="java.lang.String">MAIDEN_NAME</Item>
      <Item class="java.lang.String">INITIALS</Item>
      <Item class="java.lang.String">KNOWN_AS</Item>
      <Item class="java.lang.String">ZONE_CODE</Item>
      <Item class="java.lang.String">ZONE_DESCRIPTION</Item>
      <Item class="java.lang.String">DEPARTMENT_CODE</Item>
      <Item class="java.lang.String">DEPARTMENT_DESCRIPTION</Item>
      <Item class="java.lang.String">SUB_DEPARTMENT_CODE</Item>
      <Item class="java.lang.String">SUB_DEPARTMENT_DESCRIPTION</Item>
      <Item class="java.lang.String">ACTIVE_IND</Item>
      <Item class="java.lang.String">DATE_OF_BIRTH</Item>
      <Item class="java.lang.String">START_DATE</Item>
      <Item class="java.lang.String">LEAVE_DATE</Item>
      <Item class="java.lang.String">HR_CODE</Item>
      <Item class="java.lang.String">COMPANY_CODE</Item>
      <Item class="java.lang.String">SUB_COMPANY_CODE</Item>
      <Item class="java.lang.String">COMPANY_NAME</Item>
      <Item class="java.lang.String">SUB_COMPANY_NAME</Item>
      <Item class="java.lang.String">MOBILE_PHONE_NUMBER</Item>
      <Item class="java.lang.String">ACCESS_REASON_CODE</Item>
      <Item class="java.lang.String">ACCESS_REASON_DESCRIPTION</Item>
      <Item class="java.lang.String">ALLOWED_VISITOR_IND</Item>
      <Item class="java.lang.String">EMAIL_ADDRESS</Item>
      <Item class="java.lang.String">ADDRESS_1</Item>
      <Item class="java.lang.String">ADDRESS_2</Item>
      <Item class="java.lang.String">ADDRESS_3</Item>
      <Item class="java.lang.String">ADDRESS_4</Item>
      <Item class="java.lang.String">ADDRESS_5</Item>
      <Item class="java.lang.String">ADDRESS_6</Item>
      <Item class="java.lang.String">ADDRESS_7</Item>
      <Item class="java.lang.String">ADDRESS_8</Item>
      <Item class="java.lang.String">POST_CODE</Item>
      <Item class="java.lang.String">COUNTRY_CODE</Item>
      <Item class="java.lang.String">COUNTRY_NAME</Item>
      <Item class="java.lang.String">BIRTHPLACE</Item>
      <Item class="java.lang.String">NATIONALITY_CODE</Item>
      <Item class="java.lang.String">NATIONALITY_DESCRIPTION</Item>
      <Item class="java.lang.String">GENDER_CODE</Item>
      <Item class="java.lang.String">GENDER_DESCRIPTION</Item>
      <Item class="java.lang.String">WORK_PHONE_NUMBER</Item>
      <Item class="java.lang.String">HOME_PHONE_NUMBER</Item>
      <Item class="java.lang.String">JOB_CODE</Item>
      <Item class="java.lang.String">JOB_DESCRIPTION</Item>
      <Item class="java.lang.String">PERSON_CATEGORY_CODE</Item>
      <Item class="java.lang.String">PERSON_CATEGORY_DESCRIPTION</Item>
      <Item class="java.lang.String">NATIONAL_SECURITY_NUMBER</Item>
      <Item class="java.lang.String">COST_CENTRE_CODE</Item>
      <Item class="java.lang.String">COST_CENTRE_DESCRIPTION</Item>
      <Item class="java.lang.String">SPONSOR_IND</Item>
      <Item class="java.lang.String">COMMENTS</Item>
      <Item class="java.lang.String">ASSEMBLY_POINT_CODE</Item>
      <Item class="java.lang.String">ASSEMBLY_POINT_DESCRIPTION</Item>
      <Item class="java.lang.String">CASHLESS_EXPORT_CODE</Item>
      <Item class="java.lang.String">CASHLESS_EXPORT_DESCRIPTION</Item>
      <Item class="java.lang.String">EXPORT_TO_CASHLESS_IND</Item>
      <Item class="java.lang.String">EXTENDED_DOOR_OPEN_IND</Item>
      <Item class="java.lang.String">POST_CONDITIONAL_TNA_IND</Item>
      <Item class="java.lang.String">LOCKDOWN_AUTHORISATION_IND</Item>
      <Item class="java.lang.String">INVOKE_LOCKDOWN_IND</Item>
      <Item class="java.lang.String">SUPPRESS_IN_OUT_CHECK_IND</Item>
      <Item class="java.lang.String">RELAX_ACCESS_01_IND</Item>
      <Item class="java.lang.String">RELAX_ACCESS_02_IND</Item>
      <Item class="java.lang.String">CUSTOM_FIELDS_VALUES</Item>
      <Item class="java.lang.String">CUSTOM_FIELDS_HEADERS</Item>
      <Item class="java.lang.String">FACIAL_RECOGNITION</Item>
      <Item class="java.lang.String">SITE_STATUS_IND</Item>
      <Item class="java.lang.String">HASPHOTO</Item>
   </columnPositions>
   <columnWidths>
      <Item>51</Item>
      <Item>54</Item>
      <Item>42</Item>
      <Item>55</Item>
      <Item>96</Item>
      <Item>103</Item>
      <Item>99</Item>
      <Item>180</Item>
      <Item>87</Item>
      <Item>130</Item>
      <Item>79</Item>
      <Item>73</Item>
      <Item>97</Item>
      <Item>98</Item>
      <Item>64</Item>
      <Item>81</Item>
      <Item>90</Item>
      <Item>133</Item>
      <Item>131</Item>
      <Item>174</Item>
      <Item>161</Item>
      <Item>204</Item>
      <Item>83</Item>
      <Item>108</Item>
      <Item>145</Item>
      <Item>88</Item>
      <Item>72</Item>
      <Item>112</Item>
      <Item>142</Item>
      <Item>111</Item>
      <Item>141</Item>
      <Item>159</Item>
      <Item>155</Item>
      <Item>198</Item>
      <Item>146</Item>
      <Item>166</Item>
      <Item>85</Item>
      <Item>85</Item>
      <Item>85</Item>
      <Item>85</Item>
      <Item>85</Item>
      <Item>85</Item>
      <Item>85</Item>
      <Item>85</Item>
      <Item>88</Item>
      <Item>111</Item>
      <Item>110</Item>
      <Item>87</Item>
      <Item>129</Item>
      <Item>172</Item>
      <Item>103</Item>
      <Item>146</Item>
      <Item>149</Item>
      <Item>150</Item>
      <Item>77</Item>
      <Item>120</Item>
      <Item>170</Item>
      <Item>213</Item>
      <Item>188</Item>
      <Item>139</Item>
      <Item>182</Item>
      <Item>100</Item>
      <Item>84</Item>
      <Item>157</Item>
      <Item>200</Item>
      <Item>167</Item>
      <Item>210</Item>
      <Item>176</Item>
      <Item>179</Item>
      <Item>185</Item>
      <Item>205</Item>
      <Item>155</Item>
      <Item>195</Item>
      <Item>150</Item>
      <Item>150</Item>
      <Item>161</Item>
      <Item>170</Item>
      <Item>140</Item>
      <Item>120</Item>
      <Item>82</Item>
   </columnWidths>
   <searchParams class="java.util.ArrayList"/>
   <sortClauses>
      <Item/>
   </sortClauses>
   <uniqueName>IdeConnections%23DB+test12av.tds.iewith
custom_fields as (
   select *
   from ca_custom_values
   where reference_type = 'PN'
),
face_ids as (
   select 
      cfr.person_code || '-' || cfr.person_type id,
      listagg(cfr.face_id, ',') WITHIN GROUP (ORDER BY cfr.face_id) face_id
   from ca_person_facial_recognition cfr
   group by cfr.person_code, cfr.person_type
),
userrole as (select user_role_name
   from  safe_user_role_assignment
   where lower(username) = lower(:Uidtoken))

select iqq.*,  nvl((select caup.negate_sql(caup.is_empty_sql(p.picture)) from ca_person_photo p where p.person_code = iqq.person_code and p.person_type = iqq.person_type and p.active_ind = 'Y' and rownum = 1), 'N') hasphoto
from
(  select 
      rownum rnum,
      :st begin,
      :lim end,
      count(*) over () total,
      iq.*
   from
   (  
   select 
         pi.person_code ||'-'|| pi.person_type id,
         pi.person_code,
         pi.person_type, 
         pt.person_type_description, 
         pi.title title_code,
         spt.title_description title_description,
         pi.forename,
         pi.surname,
         pi.middle_name,
         pi.maiden_name,
         pi.initials,
         pi.known_as,
         pi.zone_code,
         z.zone_description,
         pi.department_code,
         d.department_description,
         pi.sub_department_code,
         csd.sub_department_description,
         pi.active_ind active_ind,
         ca_utility_pak.date_to_iso_zulu_string(pi.date_of_birth) as date_of_birth,
         ca_utility_pak.date_to_iso_zulu_string(pi.start_date) as start_date,
         ca_utility_pak.date_to_iso_zulu_string(pi.leave_date) as leave_date,
         pi.hr_code,
         pi.company_code,
         pi.sub_company_code sub_company_code,
         c.company_name,
         csub.company_name sub_company_name,
         trim(pi.mobile_phone_number) mobile_phone_number,
         pi.access_reason_code,
         ar.access_reason_description,
         (pi.allowed_visitor_ind) allowed_visitor_ind,
         pi.email_address,
         pi.address_1,
         pi.address_2,
         pi.address_3,
         pi.address_4,
         pi.address_5,
         pi.address_6,
         pi.address_7,
         pi.address_8,
         pi.post_code post_code,
         pi.country_code country_code,
         sfc.country_name country_name,
         pi.birthplace birthplace,
         pi.nationality_code nationality_code,
         cn.nationality_description nationality_description,
         pi.gender gender_code,
         cg.gender_description gender_description,
         pi.work_phone_number work_phone_number,
         pi.home_phone_number home_phone_number,
         pi.job_title_code job_code,
         j.job_title_description job_description,
         pi.person_category_code person_category_code,
         pc.person_category_description person_category_description,
         pi.national_security_number national_security_number,
         pi.cost_centre_code cost_centre_code,
         ccc.cost_centre_description cost_centre_description,
         pi.sponsor_ind sponsor_ind,
         pi.comments comments,
         pi.assembly_point_code assembly_point_code,
         cap.assembly_point_description assembly_point_description,
         pi.cashless_export_code cashless_export_code,
         cce.cashless_export_description cashless_export_description,
         pi.export_to_cashless_ind export_to_cashless_ind,
         pi.extended_door_open_ind extended_door_open_ind,
         pi.post_conditional_tna_ind post_conditional_tna_ind,
         pi.lockdown_authorisation_ind lockdown_authorisation_ind,
         pi.invoke_lockdown_ind invoke_lockdown_ind,
         pi.suppress_in_out_check_ind suppress_in_out_check_ind,
         pi.relax_access_01_ind relax_access_01_ind,
         pi.relax_access_02_ind relax_access_02_ind,
         regexp_replace(cf.custom_fields_values, ', *', ',') custom_fields_values,
         regexp_replace(cf.custom_fields_headers, ', *', ',') custom_fields_headers, 
         fi.face_id facial_recognition,
         nvl(cps.site_status_ind,'N') site_status_ind

      from 
         ca_person_interface pi
         join ca_person_type_control pt
            on pi.person_type = pt.person_type
         join ca_zone z
            on pi.zone_code = z.zone_code
         join ca_department d
            on pi.department_code = d.department_code
         join ca_user_role_permission surrz
            on pi.zone_code = surrz.reference_code
         join ca_user_role_permission surrpt
            on pi.person_type = surrpt.reference_code
         join ca_user_role_permission surrd
            on pi.department_code = surrd.reference_code
         join userrole u
            on surrz.user_role_name = u.user_role_name and surrpt.user_role_name = u.user_role_name and surrd.user_role_name =  u.user_role_name
         left outer join ca_company c
            on pi.company_code = c.company_code 
         left outer join ca_company csub
            on pi.sub_company_code = csub.company_code
         left join ca_gender cg
            on pi.gender = cg.gender_code
         left outer join ca_access_reason ar
            on pi.access_reason_code = ar.access_reason_code
         left join ca_job_title j
            on pi.job_title_code = j.job_title_code
         left join ca_person_category pc
            on pi.person_category_code = pc.person_category_code 
         left join safe_country sfc
            on pi.country_code = sfc.iso2  
         left join ca_nationality cn
            on pi.nationality_code = cn.nationality_code  
         left join ca_sub_department csd
            on pi.sub_department_code = csd.sub_department_code      
         left join ca_cost_centre ccc
            on pi.cost_centre_code = ccc.cost_centre_code
         left join ca_assembly_point cap
            on pi.assembly_point_code = cap.assembly_point_code
         left join ca_cashless_export cce
            on pi.cashless_export_code = cce.cashless_export_code
         left join safe_person_title spt
            on pi.title = spt.title_code
         left join custom_fields cf
            on pi.person_type || '-' || pi.person_code = cf.reference_id
         left join face_ids fi
            on pi.person_code || '-' || pi.person_type = fi.id
         left join ca_person_status cps
            on cps.person_code = pi.person_code
            and cps.person_type = pi.person_type
      where 
         nvl(trim(:pt), pi.person_type) = pi.person_type
         and nvl(trim(:zc), pi.zone_code) = pi.zone_code
         and nvl(trim(:dc), pi.department_code) =pi.department_code
         and pi.active_ind like nvl(trim(:a), '%')
         and instr(decode(:ipt,'%',pi.person_type,:ipt), pi.person_type) > 0
         and instr(:ept,pi.person_type) = 0
         and nvl(trim(:pc), pi.person_code) = pi.person_code  
         and pi.allowed_visitor_ind is not null and pi.allowed_visitor_ind = 'Y'
         and nvl(pi.job_title_code, 'notsearchable') like nvl(trim(:jc), '%')
         and nvl(pi.access_reason_code, 'notsearchable') like nvl(trim(:arc), '%')
         and nvl(pi.person_category_code, 'notsearchable') like nvl(trim(:pcc), '%')
         and nvl(pi.company_code, 'notsearchable') like nvl(trim(:cc), '%')
         and nvl(pi.gender, 'notsearchable') like nvl(trim(:gc), '%')
         and ((trim(:dt) is null or trim(:df) is null or trunc(pi.start_date) between caup.iso_zulu_string_to_date(trim(:df)) and caup.iso_zulu_string_to_date(trim(:dt))))
         and surrz.reference_type = 'ZE'
         and surrpt.reference_type = 'PNTP'
         and surrd.reference_type = 'DT'
         and lower(
            '*'|| pi.person_code ||'-'|| pi.person_type ||'* '||
            '*'|| pi.forename ||' '|| pi.surname ||'* '||
            pi.person_code ||' '||
            pt.person_type_description ||' '|| 
            pi.forename ||' '||
            pi.middle_name ||' '||
            pi.surname ||' '||
            pi.known_as ||' '|| 
            z.zone_description ||' '||
            d.department_description ||' '||
            c.company_name ||' '||
            trim(pi.mobile_phone_number) ||' '||
            ar.access_reason_description ||' '||
            pi.email_address ||' '||
            j.job_title_description ||' '||
            cf.custom_fields_values ||' '||
            pi.address_1 ||' '||
            pi.address_2 ||' '||
            pi.address_3 ||' '||
            pi.address_4 ||' '||
            pi.address_5 ||' '||
            pi.address_6 ||' '||
            pi.address_7 ||' '||
            pi.address_8 ||' '||
            pi.hr_code   ||' '||
            to_char(pi.date_of_birth, :DateTimeFormat) ||' '||
            to_char(pi.start_date, :DateTimeFormat) ||' '||
            to_char(pi.leave_date, :DateTimeFormat) ||' '||
            fi.face_id
         ) like lower('%'|| :q ||'%')  
      order by
         case when lower(:dir) = 'asc' then
         decode( 
            :sort, 
               'person_code', lower(person_code),
               'person_type', lower(person_type), 
               'person_type_description', lower(person_type_description), 
               'title_description', lower(spt.title_description),
               'forename', lower(forename),
               'surname', lower(surname),
               'known_as', lower(known_as),
               'middle_name', lower(middle_name),
               'maiden_name', lower(maiden_name),
               'initials', lower(initials),
               'zone_description', lower(zone_description),
               'department_description', lower(department_description),
               'sub_department_description', lower(csd.sub_department_description),
               'active_ind', lower(active_ind),
               'date_of_birth', ca_utility_pak.get_sort_date(pi.date_of_birth),
               'start_date', ca_utility_pak.get_sort_date(pi.start_date),
               'leave_date', ca_utility_pak.get_sort_date(pi.leave_date),
               'company_name', lower(company_name),
               'sub_company_name', lower(c.company_name),
               'mobile_phone_number', lower(mobile_phone_number),
               'hr_code', lower(hr_code),
               'access_reason_description', lower(access_reason_description),
               'email_address', lower(email_address),
               'job_description', lower(job_description),
               'person_category_description', lower(person_category_description),
               'address', lower(pi.address_1 || ' ' || pi.address_2 || ' ' || pi.address_3 || ' ' || pi.address_4 || ' ' || pi.address_5 || ' ' || pi.address_6 || ' ' || pi.address_7 || ' ' || pi.address_8),
               'post_code', lower(pi.post_code),
               'country_name', lower(sfc.country_name),
               'birthplace', lower(pi.birthplace),
               'nationality_description', lower(cn.nationality_description),
               'gender_description', lower(cg.gender_description),
               'national_security_number', lower(pi.national_security_number),
               'work_phone_number', lower(pi.work_phone_number),
               'home_phone_number', lower(pi.home_phone_number),
               'cost_centre_description', lower(ccc.cost_centre_description),
               'post_conditional_tna_ind', lower(pi.post_conditional_tna_ind),
               'sponsor_ind', lower(pi.sponsor_ind),
               'comments', lower(pi.comments),
               'assembly_point_description', lower(cap.assembly_point_description),
               'cashless_export_description', lower(cce.cashless_export_description),
               'export_to_cashless_ind', lower(pi.export_to_cashless_ind),
               'extended_door_open_ind', lower(pi.extended_door_open_ind),
               'lockdown_authorisation_ind', lower(pi.lockdown_authorisation_ind),
               'invoke_lockdown_ind', lower(pi.invoke_lockdown_ind),
               'suppress_in_out_check_ind', lower(pi.suppress_in_out_check_ind),
               'relax_access_01_ind', lower(pi.relax_access_01_ind),
               'relax_access_02_ind', lower(pi.relax_access_02_ind ),
               'facial_recognition', lower(fi.face_id),
               lower(person_code)
         ) end asc, 
         case when lower(:dir) = 'desc' then
         decode( 
            :sort, 
               'person_code', lower(person_code),
               'person_type', lower(person_type), 
               'person_type_description', lower(person_type_description), 
               'title_description', lower(spt.title_description),
               'forename', lower(forename),
               'surname', lower(surname),
               'known_as', lower(known_as),
               'middle_name', lower(middle_name),
               'maiden_name', lower(maiden_name),
               'initials', lower(initials),
               'zone_description', lower(zone_description),
               'department_description', lower(department_description),
               'sub_department_description', lower(csd.sub_department_description),
               'active_ind', lower(active_ind),
               'date_of_birth', ca_utility_pak.get_sort_date(pi.date_of_birth),
               'start_date', ca_utility_pak.get_sort_date(pi.start_date),
               'leave_date', ca_utility_pak.get_sort_date(pi.leave_date),
               'company_name', lower(company_name),
               'sub_company_name', lower(c.company_name),
               'mobile_phone_number', lower(mobile_phone_number),
               'hr_code', lower(hr_code),
               'access_reason_description', lower(access_reason_description),
               'email_address', lower(email_address),
               'job_description', lower(job_description),
               'person_category_description', lower(person_category_description),
               'address', lower(pi.address_1 || ' ' || pi.address_2 || ' ' || pi.address_3 || ' ' || pi.address_4 || ' ' || pi.address_5 || ' ' || pi.address_6 || ' ' || pi.address_7 || ' ' || pi.address_8),
               'post_code', lower(pi.post_code),
               'country_name', lower(sfc.country_name),
               'birthplace', lower(pi.birthplace),
               'nationality_description', lower(cn.nationality_description),
               'gender_description', lower(cg.gender_description),
               'national_security_number', lower(pi.national_security_number),
               'work_phone_number', lower(pi.work_phone_number),
               'home_phone_number', lower(pi.home_phone_number),
               'cost_centre_description', lower(ccc.cost_centre_description),
               'post_conditional_tna_ind', lower(pi.post_conditional_tna_ind),
               'sponsor_ind', lower(pi.sponsor_ind),
               'comments', lower(pi.comments),
               'assembly_point_description', lower(cap.assembly_point_description),
               'cashless_export_description', lower(cce.cashless_export_description),
               'export_to_cashless_ind', lower(pi.export_to_cashless_ind),
               'extended_door_open_ind', lower(pi.extended_door_open_ind),
               'lockdown_authorisation_ind', lower(pi.lockdown_authorisation_ind),
               'invoke_lockdown_ind', lower(pi.invoke_lockdown_ind),
               'suppress_in_out_check_ind', lower(pi.suppress_in_out_check_ind),
               'relax_access_01_ind', lower(pi.relax_access_01_ind),
               'relax_access_02_ind', lower(pi.relax_access_02_ind ),
               'facial_recognition', lower(fi.face_id),
               lower(person_code)
      ) end desc,
      lower(id) asc
   )iq
)iqq
where rnum > begin and rownum &lt;= end
and safe_request_permissions_pak.check_permission_sql (
      :Uidtoken, 
      '(guestpersonmenu)(contractordetailmenu)(emergencypersondetail)(accesspersonmenu)(employeepersonmenu)(studentotherpersonmenu)', 
      'personGrid', 
      'GET' 
) = 'Y'</uniqueName>
</TableSettings>
