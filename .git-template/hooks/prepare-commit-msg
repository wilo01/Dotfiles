#!/bin/bash

enable_local_hooks=$(git config --local hooks.enableLocalHooks)
PROJECT_ROOT=$(git rev-parse --show-toplevel)
if [ "$enable_local_hooks" == true ] && [ -e "$PROJECT_ROOT/.githooks/pre-commit" ]; then
   echo "Run local pre-commit hook"
   "$PROJECT_ROOT/.githooks/pre-commit" "$@"

   # Catch the exit code of the pre-commit hook
   exit_status=$?
   if [ $exit_status -ne 0 ]; then
      echo "Local pre-commit hook failed with exit code $exit_status"
      exit $exit_status
   fi
   echo "End of local pre-commit hook"
fi

enable_global_hooks=$(git config --local hooks.enableGlobalHooks)
if [ "$enable_global_hooks" != true ]; then
   echo "Global git prepare-commit-msg is disabled via Git config."
   exit 0
fi

echo "Global git prepare-commit-msg run"
branchPath=$(git symbolic-ref --short HEAD) #Somthing like refs/heads/myBranchName
branchName=${branchPath}                    #Get text behind the last / of the branch path

firstLine=$(head -n1 "$1")

if [ -z "$firstLine" ]; then #Check that this is not an amend by checking that the first line is empty
   sed -i '.bak' "1s/^/JIRA: #$branchName\n\nLogs:\n-/" "$1"
fi
